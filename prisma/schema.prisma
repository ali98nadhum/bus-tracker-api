generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum Status {
  pending
  approved
  rejected
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  userLocation UserLocation?
  role         Role          @default(USER)
  image        String?
  block        Boolean       @default(false)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
}

model Bus {
  id            Int          @id @default(autoincrement())
  driverName    String
  phone         String
  password      String
  busLocation   BusLocation?
  draverImage   String?
  licensephoto  String?
  role          Role         @default(DRIVER)
  block         Boolean      @default(false)
  status        Status       @default(pending)
  currentLat    Float?
  currentLng    Float?
  destination   Destination  @relation(fields: [destinationId], references: [id])
  destinationId Int
  carNumber     Int
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
}

model Destination {
  id        Int      @id @default(autoincrement())
  name      String
  buses     Bus[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserLocation {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BusLocation {
  id        Int      @id @default(autoincrement())
  bus       Bus      @relation(fields: [busId], references: [id])
  busId     Int      @unique
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
