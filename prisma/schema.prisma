generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum Status {
  pending
  approved
  rejected
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  location   Location?
  role       Role
  image      String?
  block      Boolean   @default(false)
  documents  Document?
  isApproved Boolean   @default(false)
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
}

model Document {
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
  userId     Int    @unique
  licenseUrl String
  status     Status @default(pending)
}

model Bus {
  id            Int         @id @default(autoincrement())
  driverName    String
  currentLat    Float
  currentLng    Float
  destination   Destination @relation(fields: [destinationId], references: [id])
  destinationId Int
  carNumber     Int
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
}

model Destination {
  id        Int      @id @default(autoincrement())
  name      String
  buses     Bus[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Location {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  lat       Float
  lng       Float
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
