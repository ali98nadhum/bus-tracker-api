generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum Status {
  pending
  approved
  rejected
}

model User {
  id                       Int                     @id @default(autoincrement())
  name                     String
  email                    String                  @unique
  password                 String
  role                     Role                    @default(USER)
  image                    String?
  block                    Boolean                 @default(false)
  isVerifird               Boolean                 @default(false)
  verificationToken        String
  verificationTokenExpires DateTime
  resetPasswordToken       String
  resetPasswordExpires     String
  UserLocation             UserLocation?
  favoriteDestinations     User_fave_destination[]
  createdAt                DateTime                @default(now()) @map("created_at")
  updatedAt                DateTime                @updatedAt @map("updated_at")
}

model Bus {
  id            Int          @id @default(autoincrement())
  driverName    String
  phone         String
  password      String
  driverImage   String?
  licensephoto  String?
  role          Role         @default(DRIVER)
  block         Boolean      @default(false)
  status        Status       @default(pending)
  carNumber     String       @unique
  busLocation   BusLocation?
  destination   Destination  @relation(fields: [destinationId], references: [id])
  destinationId Int
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
}

model Destination {
  id          Int                     @id @default(autoincrement())
  name        String
  buses       Bus[]
  favoritedBy User_fave_destination[]
  createdAt   DateTime                @default(now()) @map("created_at")
  updatedAt   DateTime                @updatedAt @map("updated_at")
}

model UserLocation {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User_fave_destination {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  destination   Destination @relation(fields: [destinationId], references: [id])
  destinationId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([userId, destinationId])
}

model BusLocation {
  id        Int      @id @default(autoincrement())
  bus       Bus      @relation(fields: [busId], references: [id])
  busId     Int      @unique
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
